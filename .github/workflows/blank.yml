name: Setup JFrog CLI with OIDC

on:
  push:
    tags:
      - "v*" # This triggers the workflow on tags that start with "v"

permissions:
  id-token: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      JFROG_URL: ${{ secrets.JFROG_URL }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup JFrog CLI
        uses: jfrog/setup-jfrog-cli@v4
        with:
          version: '2.73.0'
          oidc-provider-name: manu-oidc-test
          oidc-audience: oidctest

      - name: Obtain GitHub OIDC Token
        id: get-oidc-token
        env:
          ACTIONS_ID_TOKEN_REQUEST_URL: ${{ secrets.ACTIONS_ID_TOKEN_REQUEST_URL }}
          ACTIONS_ID_TOKEN_REQUEST_TOKEN: ${{ secrets.ACTIONS_ID_TOKEN_REQUEST_TOKEN }}
        run: |
          echo "Requesting GitHub OIDC token..."
          
          # Request the OIDC token
          TOKEN=$(curl -H "Authorization: Bearer $ACTIONS_ID_TOKEN_REQUEST_TOKEN" \
                        "$ACTIONS_ID_TOKEN_REQUEST_URL" | jq -r '.value')
          
          echo "::set-output name=id_token::$TOKEN"

      - name: Configure JFrog CLI with OIDC
        env:
          JFROG_URL: https://hts2.jfrog.io/
          ID_TOKEN: ${{ steps.get-oidc-token.outputs.id_token }}
        run: |
          echo "Configuring JFrog CLI with OIDC token..."

          # Debugging: Output the token length for troubleshooting
          echo "Token length: ${#ID_TOKEN}"

          # If token is empty, fail the step
          if [ -z "$ID_TOKEN" ]; then
            echo "OIDC token is empty"; exit 1;
          fi

          # Configure JFrog CLI with the obtained token
          jf c add my-artifactory-server \
            --url=$JFROG_URL \
            --access-token=$ID_TOKEN \
            --interactive=false

      - name: Run JFrog CLI
        run: |
          # Ping the server to check the connection
          jf rt ping --server-id my-artifactory-server
